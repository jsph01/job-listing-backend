{"version":3,"sources":["components/NavComponent/NavComponent.jsx","pages/LandingPage/LandingPage.jsx","utils/tokenService.js","utils/authService.js","pages/LoginPage/LoginPage.jsx","pages/SignupPage/SignupPage.jsx","pages/LogoutPage/LogoutPage.jsx","pages/ProfilePage/ProfilePage.jsx","pages/NewJobPage/NewJobPage.jsx","pages/JobsListPage/JobsListPage.jsx","components/ReplyComponent/ReplyComponent.jsx","pages/JobPage/JobPage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["NavComponent","className","style","position","top","left","width","to","id","this","props","user","Component","LandingPage","marginTop","textAlign","display","gridTemplateColumns","src","alt","margin","justifyContent","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","signup","userInfo","cb","fetch","method","headers","body","stringify","then","res","json","tokenService","error","catch","console","log","getUser","logout","login","LoginPage","state","username","password","handleChangeField","e","setState","target","name","value","document","getElementById","setCustomValidity","handleSubmit","preventDefault","userService","fieldUsername","reportValidity","handleLogin","history","push","onSubmit","type","required","onChange","SignupPage","email","password2","zipcode","firstName","lastName","portraitUrl","validatePassword","fieldPassword2","fieldname","Object","keys","errors","field","onKeyUp","pattern","LogoutPage","handleLogout","ProfilePage","editMode","editFields","handleEditOn","handleEditOff","handleSubmitEdit","forEach","fieldName","posts","length","onClick","scope","map","key","idx","post","postDate","createdAt","dateDisplay","getMonth","getDate","getFullYear","title","NewJobPage","postInfo","kind","_id","addPost","htmlFor","rows","size","maxLength","JobsPage","authorUsername","ReplyComponent","expanded","isAuthor","reply","newMessage","toggleExpand","postId","replyId","addReply","message","messages","handleChange","handleDelete","messageIdx","getAttribute","splice","border","borderRadius","padding","height","lineHeight","aria-hidden","consumerUsername","userUsername","data-idx","placeholder","JobPage","newReply","replyIdx","replies","findIndex","r","submitDelete","removePost","submitEdit","options","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","marginRight","marginLeft","PrivateRoute","rest","render","component","App","pk","exact","path","JobsListPage","match","params","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b62b3588.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass NavComponent extends Component {\n  render() {\n    return <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark sticky-top\" style ={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%'\n    }}>\n      <Link className=\"navbar-brand\" to=\"/\">WorkSpree</Link>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <Link className=\"nav-link\" to=\"/jobs\">Jobs</Link>\n          {this.props.user\n          ? <>\n              <Link className=\"nav-link\" to=\"/jobs/new\">Advertise</Link>\n              <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n              <Link className=\"nav-link\" to=\"/logout\">Logout</Link>\n            </>\n          : <>\n              <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n              <Link className=\"nav-link\" to=\"/login\">Login</Link>\n            </>}\n        </ul>\n      </div>\n    </nav>\n  }\n}\n\nexport default NavComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction LandingPage() {\n  return <>\n    <h3 style={{ marginTop: 32, textAlign: 'center'}}>WorkSpree</h3>\n    <div style={{\n      display: 'grid',\n      gridTemplateColumns: '50% 50%'\n    }}>\n      <img src=\"http://paradisevalleyseptic.com/wp-content/uploads/2017/09/Are-You-Using-the-Right-Plunger.jpg\"\n        alt=\"plunger\"\n        style={{ width: '100%' }}\n      />\n      <h1 style={{ margin: 'auto' }}>If you need someone for the job fast, you've come to the right place.</h1>\n    </div>\n    <div style={{\n      display: 'flex',\n      justifyContent: 'center'\n    }}>\n      <Link\n        className=\"btn btn-lg btn-outline-success\"\n        to=\"/jobs\"\n        style={{ margin: '2px' }}\n      > view jobs </Link>\n      <Link\n        className=\"btn btn-lg btn-outline-success\"\n        to=\"/signup\"\n        style={{ margin: '2px' }}\n      > Sign Up </Link>\n    </div>\n  </>;\n}\n\nexport default LandingPage;","function setToken(token) {\n  if(token) localStorage.setItem('token', token);\n  else localStorage.removeItem('token');\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if(token) {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return !!token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};\n","import tokenService from './tokenService';\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(userInfo, cb) {\n  return fetch('http://localhost:3001/api/auth/login', {\n\t\tmethod: 'POST',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({ userInfo })\n\t})\n\t\t.then(res => res.json())\n\t\t.then(body => {\n\t\t\tif(body.token) tokenService.setToken(body.token)\n\t\t\telse var error = true;\n\t\t\tcb(error);\n\t\t})\n\t\t.catch(console.log);\n}\n\nfunction signup(userInfo, cb) {\n\tfetch('http://localhost:3001/api/auth/signup', {\n\t\tmethod: 'POST',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({ userInfo })\n\t})\n\t\t.then(res => res.json())\n\t\t.then(body => {\n\t\t\tif(body.token) tokenService.setToken(body.token);\n\t\t\tcb(body.error);\n\t\t})\n\t\t.catch(console.log);\t\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};\n","import React, { Component } from 'react';\nimport userService from '../../utils/authService';\n\nclass LoginPage extends Component {\n\tstate = {\n\t\tusername: '',\n\t\tpassword: ''\n\t};\n\n\thandleChangeField = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t\tdocument.getElementById('field-username').setCustomValidity('');\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tuserService.login(this.state, (error) => {\n\t\t\tif(error) {\n\t\t\t\tlet fieldUsername = document.getElementById('field-username');\n\t\t\t\tfieldUsername.setCustomValidity('the username or password is incorrect');\n\t\t\t\tfieldUsername.reportValidity();\n\t\t\t} else {\n\t\t\t\tthis.props.handleLogin();\n\t\t\t\tthis.props.history.push('/profile')\n\t\t\t}\n\t\t});\n\t};\n\t\n\trender() {\n\t\treturn <>\n\t\t\t<h2 style={{ textAlign: 'center', margin: '32px 0' }}>Login</h2>\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>username:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"field-username\" required value={this.state.username} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>password:{' '}</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\" required value={this.state.password} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div style={{ justifyContent: 'center', margin:'16px 0'}}>\n\t\t\t\t\t<input className=\"btn btn-success\" type=\"submit\" value=\"submit\" />\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>;\n\t}\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\n\nimport userService from '../../utils/authService';\n\nclass SignupPage extends Component {\n\tstate = {\n\t\tusername: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tpassword2: '',\n\t\tzipcode: '',\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\tportraitUrl: ''\n\t};\n\n\tvalidatePassword = () => {\n\t\tlet fieldPassword2 = document.getElementById('field-password2');\n\t\tif(this.state.password !== this.state.password2) \n\t\t\tfieldPassword2.setCustomValidity(\"passwords don't match\");\n\t\telse\n\t\t\tfieldPassword2.setCustomValidity('');\n\t}\n\t\n\thandleChangeField = (e) => {\n\t\tlet name = e.target.name;\n\t\tthis.setState(\n\t\t\t{ [name]: e.target.value },\n\t\t\t() => {\n\t\t\t\tswitch(name) {\n\t\t\t\t\tcase 'password':\n\t\t\t\t\t\tthis.validatePassword();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'username':\n\t\t\t\t\t\tdocument.getElementById('field-username').setCustomValidity('');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'email':\n\t\t\t\t\t\t\tdocument.getElementById('field-email').setCustomValidity('');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ portraitUrl: this.state.portraitUrl }, () => {\n\t\t\tuserService.signup(this.state, (error) => {\n\t\t\t\tif(!!error) {\n\t\t\t\t\tif(error.name === \"ValidationError\") {\n\t\t\t\t\t\tlet fieldname = Object.keys(error.errors)[0];\n\t\t\t\t\t\tlet field = document.getElementById(`field-${fieldname}`);\n\t\t\t\t\t\tfield.setCustomValidity(`this ${fieldname} has already been taken`);\n\t\t\t\t\t\tfield.reportValidity();\n\t\t\t\t\t} else console.log(error);\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.handleLogin();\n\t\t\t\t\tthis.props.history.push('/jobs/new')\n\t\t\t\t} \n\t\t\t});\n\t\t});\n\t};\n\t\n\trender() {\n\t\treturn <>\n\t\t\t<h2>Signup to get it done</h2>\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>username:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"field-username\" required value={this.state.username} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>email:{' '}</label>\n\t\t\t\t\t<input type=\"email\" name=\"email\" id=\"field-email\" required value={this.state.email} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>password:{' '}</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\" required value={this.state.password} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>confirm password:{' '}</label>\n\t\t\t\t\t<input type=\"password\" name=\"password2\" id=\"field-password2\" required value={this.state.password2} onChange={this.handleChangeField} onKeyUp={this.validatePassword} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>zipcode:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"zipcode\" pattern=\"[0-9]{5}\" required value={this.state.zipcode} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>first name:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"firstName\" required value={this.state.firstName} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>last name:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"lastName\" required value={this.state.lastName} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>profile image url:{' '}</label>\n\t\t\t\t\t<input type=\"url\" name=\"portraitUrl\" value={this.state.portraitUrl} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div style={{ justifyContent: 'center', margin:'16px 0'}}>\n\t\t\t\t\t<input className=\"btn btn-success\" type=\"submit\" value=\"submit\" />\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>;\n\t}\n}\n\nexport default SignupPage;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction LogoutPage(props) {\n  props.handleLogout();\n  return <Redirect to=\"/\" />\n}\n\nexport default LogoutPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport tokenService from '../../utils/tokenService';\n\nclass ProfilePage extends Component{\n  state = {\n    editMode: false,\n    editFields: null\n  };\n\n  handleChangeField = (e) => {\n    let editFields = {...this.state.editFields};\n    editFields[e.target.name] = e.target.value;\n    if(e.target.name === \"email\") {\n      document.getElementById('field-email').setCustomValidity('');\n    }\n    this.setState({ editFields });\n  };\n\n  handleEditOn = () => {\n    this.setState({\n      editMode: true,\n      editFields: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        zipcode: '',\n        portraitUrl: ''\n      }\n    });\n  };\n\n  handleEditOff = () => {\n    this.setState({ editMode: false, editFields: null });\n  };\n\n  handleSubmitEdit = (e) => {\n    e.preventDefault();\n\n    let userInfo = {...this.state.editFields};\n    Object.keys(userInfo).forEach(fieldName => {\n      if(userInfo[fieldName] === '') delete userInfo[fieldName];\n    });\n\n    fetch(`http://localhost:3001/api/users/${this.props.user.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({ userInfo })\n    })\n      .then(res => res.json())\n      .then(body => {\n        let error = body.error;\n        if(!!error) {\n          if(error.name === \"ValidationError\") {\n            let fieldname = Object.keys(error.errors)[0];\n            let field = document.getElementById(`field-${fieldname}`);\n            field.setCustomValidity(`this ${fieldname} has already been taken`);\n            field.reportValidity();\n          } else console.log(error);\n        } else {\n          tokenService.setToken(body.token);\n          this.props.handleLogin();\n          this.setState({ user: body.user })\n          this.handleEditOff();\n        }\n      })\n      .catch(console.log);\n  };\n\n  componentDidMount() {\n    fetch(`http://localhost:3001/api/users/${this.props.user.id}`, {\n      headers: {\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      }\n    })\n      .then(res => res.json())\n      .then(body => this.setState({ user: body.user }))\n      .catch(console.log);\n  }\n\n  render() {\n    return !!this.state.user\n    ? <>\n        <h2>Hello {this.state.user.firstName + ' ' + this.state.user.lastName}</h2>\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: '25% 75%'\n        }}>\n          <div className=\"card\" style={{\n            margin: '0 8px',\n            textAlign: 'center',\n          }}>\n            <img className=\"card-img-top\" src={this.state.user.portraitUrl} width=\"256px\" alt=\"Profile\" style={{ margin: 'auto' }} />\n            <div className=\"card-body\">\n              <div>\n                <label>username:&nbsp;</label>\n                <strong>{this.state.user.username}</strong>\n              </div>\n              <div>\n                <label>email:&nbsp;</label>\n                <strong>{this.state.user.email}</strong>\n              </div>\n              <div>\n                <label>zipcode:&nbsp;</label>\n                <strong>{this.state.user.zipcode}</strong>\n              </div>\n              <div>\n                <label>number of posts:&nbsp;</label>\n                <strong>{this.state.user.posts.length}</strong>\n              </div>\n              {!this.state.editMode &&\n                <button\n                  className=\"btn btn-outline-info btn-sm\"\n                  onClick={this.handleEditOn}\n                >edit info</button>}\n            </div>\n          </div>\n          <div style={{ margin: '0 8px' }}>\n            <h4>My Posts</h4>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Job Title</th>\n                  <th scope=\"col\">Zipcode</th>\n                  <th scope=\"col\">Date Posted</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(this.state.user.posts).map((key, idx) => {\n                  let post = this.state.user.posts[key];\n                  let postDate = new Date(post.createdAt);\n                  let dateDisplay = `${postDate.getMonth()}/${postDate.getDate()}/${postDate.getFullYear()}`\n                  return (\n                    <tr key={key}>\n                      <th scope=\"row\">{idx+1}</th>\n                      <td><Link to={`/jobs/${key}`}>{post.title}</Link></td>\n                      <td><section to={`/jobs/${key}`}>{post.zipcode}</section></td>\n                      <td><section to={`/jobs/${key}`}>{dateDisplay}</section></td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        {this.state.editMode\n        && <>\n            <form onSubmit={this.handleSubmitEdit}>\n              <div>\n                <label>email:{' '}</label>\n                <input type=\"email\" name=\"email\" id=\"field-email\" value={this.state.editFields.email} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>zipcode:{' '}</label>\n                <input type=\"text\" name=\"zipcode\" pattern=\"[0-9]{5}\" value={this.state.editFields.zipcode} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>first name:{' '}</label>\n                <input type=\"text\" name=\"firstName\" value={this.state.editFields.firstName} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>last name:{' '}</label>\n                <input type=\"text\" name=\"lastName\" value={this.state.editFields.lastName} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>profile image url:{' '}</label>\n                <input type=\"url\" name=\"portraitUrl\" value={this.state.editFields.portraitUrl} onChange={this.handleChangeField} />\n              </div>\n              <div style={{ margin:'16px 40%'}}>\n                <input className=\"btn btn-success\" type=\"submit\" value=\"submit\" />\n                <button className=\"btn btn-outline-danger\" onClick={this.handleEditOff} type=\"button\">\n                  cancel\n                </button>\n              </div>\n            </form>\n          </>}\n          <h5 style={{ marginTop: 12 }}>Replies</h5>\n          {/* {this.state.user.replies.map((reply, idx) => (\n                <ReplyComponent\n                  key={`reply_${idx}`}\n                  userUsername={this.state.user.username}\n                  isAuthor={true}\n                  reply={reply}\n                  postId={reply.pos}\n                  addReply={this.addReply}\n                /> */}\n      </>\n    : <h2>Loading</h2>;\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from 'react';\n\nimport tokenService from '../../utils/tokenService';\n\n//import './NewJobPage.css';\n\nclass NewJobPage extends Component {\n  state = {\n    postInfo: {\n      title: '',\n      kind: 'offering',\n      body: '',\n      zipcode: ''\n    }\n  }\n\n  handleChangeField = (e) => {\n    let postInfo = {...this.state.postInfo};\n    postInfo[e.target.name] = e.target.value;\n    this.setState({ postInfo });\n  };\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:3001/api/posts', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({ post: this.state.postInfo })\n    })\n    .then(res => res.json())\n    .then(body => {\n      let id = body.post._id;\n      this.props.addPost(body.post);\n      this.props.history.push(`/jobs/${id}`);\n    });\n  };\n\n  render() {\n    return <>\n      <h2>Create a job-listing</h2>\n      <form className=\"post-form\" style={{margin: '0'}} onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"input-title\">Title:&nbsp;</label>\n          <input className=\"form-control\" id=\"input-title\" required type=\"text\" name=\"title\" onChange={this.handleChangeField} value={this.state.postInfo.title} style={{ width: '100%' }} />\n        </div>\n        <div>\n          <p>Are you offering work or seeking it?:&nbsp;&nbsp;\n          <select name=\"kind\" onChange={this.handleChangeField} value={this.state.postInfo.kind}>\n            <option>offering</option>\n            <option>seeking</option>\n          </select></p>\n        </div>\n        <div>\n          <section htmlFor=\"post-body\">Message Body:&nbsp;</section>\n          <textarea className=\"form-control\" id=\"post-body\" required type=\"text\" name=\"body\" onChange={this.handleChangeField} value={this.state.postInfo.body} style={{ width: '100%' }} rows=\"10\" />\n        </div>\n        <div style={{ marginTop: '1em' }}>\n            <label htmlFor=\"post-zipcode\">zipcode:&nbsp;</label>\n            <input id=\"post-zipcode\" required pattern=\"[0-9]{5}\" type=\"text\" name=\"zipcode\" onChange={this.handleChangeField} value={this.state.postInfo.zipcode} size=\"5\" maxLength=\"5\" />\n        </div>\n        <div style={{ justifyContent: 'flex-start', margin:'16px 0'}}>\n\t\t\t\t\t<input className=\"btn btn-primary\" type=\"submit\" value=\"post ad\" />\n\t\t\t\t</div>\n      </form>\n    </>;\n  }\n}\n\nexport default NewJobPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass JobsPage extends Component {\n  render() {\n    return <>\n      <h2>Jobs</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Job Title</th>\n            <th scope=\"col\">Zipcode</th>\n            <th scope=\"col\">Written by</th>\n            <th scope=\"col\">Date Posted</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(this.props.posts).map((key, idx) => {\n            let post = this.props.posts[key];\n            let postDate = new Date(post.createdAt);\n            let dateDisplay = `${postDate.getMonth()}/${postDate.getDate()}/${postDate.getFullYear()}`\n            return (\n              <tr key={key}>\n                <th scope=\"row\">{idx+1}</th>\n                <td><Link to={`/jobs/${key}`}>{post.title}</Link></td>\n                <td><section to={`/jobs/${key}`}>{post.zipcode}</section></td>\n                <td><section to={`/jobs/${key}`}>{post.authorUsername}</section></td>\n                <td><section to={`/jobs/${key}`}>{dateDisplay}</section></td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>;\n  }\n}\n\nexport default JobsPage;\n","import React, { Component } from 'react';\nimport tokenService from '../../utils/tokenService';\n\nclass ReplyComponent extends Component {\n  state = {\n    expanded: !this.props.isAuthor,\n    reply: this.props.reply,\n    newMessage: ''\n  };\n\n  toggleExpand = () => {\n    if(this.props.isAuthor)\n      this.setState({ expanded: !this.state.expanded });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:3001/api/replies', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({\n        postId: this.props.postId,\n        replyId: this.state.reply._id || null,\n        reply: this.state.newMessage\n      })\n    })\n    .then(res => res.json())\n    .then(body => {\n      this.props.addReply({\n        _id: body.reply._id,\n        message: body.reply.messages[body.reply.messages.length - 1]\n      });\n      this.setState({ newMessage: ''});\n    })\n    .catch(console.log);\n  };\n\n  handleChange = (e) => this.setState({ newMessage: e.target.value});\n\n  handleDelete = (e) => {\n    e.preventDefault();\n    let messageIdx = e.target.getAttribute('data-idx');\n    fetch(`http://localhost:3001/api/replies/${this.props.reply._id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({\n        messageIdx,\n        postId: this.props.postId\n      })\n    })\n      .then(res => res.json())\n      .then(body => {\n        this.setState(state => {\n          let reply = state.reply;\n          reply.messages.splice(messageIdx, 1);\n          return ({ reply });\n        });\n      })\n      .catch(console.log);\n  };\n\n  render() {\n    return <div style = {{\n      margin: '2px 0',\n      border: '1px solid darkgray',\n      borderRadius: 4,\n      padding: '4px'\n    }}>\n      <div>\n        {this.props.isAuthor &&\n          (this.state.expanded\n          ? <button style={{\n              padding: 0,\n              width: '1em',\n              height: '1em',\n              lineHeight: 0,\n              display: 'inline'\n            }} className=\"btn btn-sm btn-outline-secondary\" onClick={this.toggleExpand}>\n              <i className=\"fa fa-minus-square-o\" aria-hidden=\"true\" />\n            </button>\n          : <button style={{\n              padding: 0,\n              width: '1em',\n              height: '1em',\n              lineHeight: 0,\n              display: 'inline'\n            }} className=\"btn btn-sm btn-outline-success\" onClick={this.toggleExpand}>\n              <i className=\"fa fa-plus-square-o\" aria-hidden=\"true\" />\n            </button>)}\n\n        {!this.state.expanded\n        ? <label>&nbsp;{this.props.reply.consumerUsername}</label>\n        : this.props.isAuthor && \n            <>\n              <label>&nbsp;message history with:&nbsp;</label>\n              <strong>{this.props.reply.consumerUsername}</strong>\n            </>}\n      </div>\n      {this.state.expanded && \n        <div style={{ padding: '2%' }}>\n          {this.props.reply.messages.map((message, idx) => (\n            <div key={message._id}>\n              {!!idx && <hr />}\n              <span style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <span>\n                  <strong>{message.authorUsername}:&nbsp;</strong>\n                  <span>{message.body}</span>\n                </span>\n                {this.props.userUsername === message.authorUsername &&\n                  <form data-idx={idx} onSubmit={this.handleDelete} style={{ display: 'inline' }}>\n                    <button className=\"btn btn-sm btn-danger\">\n                      <i className=\"fa fa-times\" aria-hidden=\"true\"/>                  \n                    </button>\n                  </form>}\n              </span>\n            </div>\n          ))}\n          <br />\n          <form className=\"pure-form\" onSubmit={this.handleSubmit} style={{\n            display: 'grid',\n            gridTemplateColumns: '90% 10%'\n          }}>\n            <input required type=\"text\" placeholder=\"reply\" style={{ width: '100%' }} onChange={this.handleChange} value={this.state.newMessage} />\n            <input className=\"btn btn-success\" type=\"submit\" value=\"send\" />\n          </form>\n        </div>}\n    </div>;\n  }\n}\n\nexport default ReplyComponent;\n","import React, { Component } from 'react';\nimport tokenService from '../../utils/tokenService';\nimport ReplyComponent from '../../components/ReplyComponent/ReplyComponent';\n\nclass JobPage extends Component {\n  state = {\n    editMode: false,\n    body: ''\n  };\n\n  addReply = (newReply) => {\n    let replyIdx = this.state.post.replies.findIndex(r => r._id === newReply._id);\n    if(replyIdx === -1) replyIdx = 0;\n\n    this.setState(state => {\n      let post = state.post;\n      post.replies[replyIdx]._id = newReply._id;\n      post.replies[replyIdx].messages.push(newReply.message);\n      return ({ post });\n    });\n  };\n\n  handleEditOn = () => this.setState(state => ({\n    editMode: true,\n    body: state.post.body\n  }));\n\n  handleEditOff = () => this.setState({\n    editMode: false,\n    body: ''\n  });\n\n  handleChange = (e) => this.setState({ body: e.target.value });\n\n  submitDelete = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:3001/api/posts/${this.props.postId}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      }\n    })\n      .then(res => res.json())\n      .then(() => {\n        this.props.removePost(this.props.postId);\n        this.props.history.push('/profile');\n      })\n      .catch(console.log);\n  };\n\n  submitEdit = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:3001/api/posts/${this.props.postId}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({ postInfo: {\n        body: this.state.body\n      }})\n    })\n      .then(res => res.json())\n      .then(body => {\n        let post = {...this.state.post};\n        post.body = body.post.body;\n        this.setState( {\n          post,\n          editMode: false,\n          body: ''\n        });\n      })\n      .catch(console.log);\n  };\n  \n  componentDidMount() {\n    let token = tokenService.getToken();\n    let options = !!token\n    ? { headers: { 'Authorization': `Bearer ${token}` }}\n    : {};\n    fetch(`http://localhost:3001/api/posts/${this.props.postId}`, options)\n      .then(res => res.json())\n      .then(body => {\n        let isAuthor = !!this.props.user && this.props.user.username === body.post.authorUsername;\n        if(this.props.user && !isAuthor && body.post.replies.length === 0) {\n          body.post.replies.push({\n            consumerUsername: this.props.user.username,\n            messages: []\n          });\n        }\n        this.setState({\n          post: body.post,\n          isAuthor\n        })\n      })\n      .catch(console.log);\n  }\n\n  render() {\n    let post = this.state.post\n    return post\n    ? <>\n        <span style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n        }}>\n          <h2>{post.title}</h2>\n          {this.state.isAuthor &&\n            <span style={{ margin: 'auto 0', width: 250}}>\n              <button className=\"btn btn-sm btn-info\" onClick={this.handleEditOn}\n                style={{ borderTopRightRadius: 0, borderBottomRightRadius: 0 }}\n              >edit</button>\n              <form onSubmit={this.submitDelete} style={{ display: 'inline' }}>\n                <input className=\"btn btn-sm btn-danger\" type=\"submit\" value=\"delete\"\n                  style={{ borderTopLeftRadius: 0, borderBottomLeftRadius: 0 }}\n                />\n              </form>\n            </span>}\n        </span>\n        <label>Posted by:&nbsp;</label>\n        <strong>{post.authorUsername}</strong>\n        {this.state.editMode\n        ? <div style={{ margin: '1em 0' }}>\n            <form onSubmit={this.submitEdit}>\n              <textarea onChange={this.handleChange} value={this.state.body} style={{ width: '100%' }} rows=\"15\" />\n              <button className=\"btn btn-info\" style={{ marginRight: 4 }} type=\"button\" onClick={this.handleEditOff}>cancel</button>\n              <input className=\"btn btn-info\" style={{ marginLeft: 4 }} type=\"submit\" value=\"save changes\" />\n            </form>\n          </div>\n        : <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{post.body}</p>}\n        <p>zipcode:&nbsp;<strong>{post.zipcode}</strong></p>\n        \n        {(() => {\n          if(!!post.replies.length)\n            return <>\n              <h3>replies</h3>\n              {post.replies.map((reply, idx) => (\n                <ReplyComponent\n                  key={`reply_${idx}`}\n                  userUsername={this.props.user.username}\n                  isAuthor={this.state.isAuthor}\n                  reply={reply}\n                  postId={post._id}\n                  addReply={this.addReply}\n                />\n              ))}\n            </>;\n          else if(!this.props.user)\n            return <button onClick={() => {\n              this.props.history.push('/signup');\n            }}>\n              Sign Up to reply to this post!\n            </button>;\n          else if(this.state.isAuthor)\n            return <i>you have no replies to this post yet.</i>;\n        })()}\n\n      </>\n    : <h2>Loading...</h2>\n  }\n}\n\nexport default JobPage;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport NavComponent from '../../components/NavComponent/NavComponent.jsx';\nimport LandingPage from '../LandingPage/LandingPage.jsx';\nimport LoginPage from '../LoginPage/LoginPage.jsx';\nimport SignupPage from '../SignupPage/SignupPage.jsx';\nimport LogoutPage from '../LogoutPage/LogoutPage.jsx';\nimport ProfilePage from '../ProfilePage/ProfilePage.jsx';\nimport NewJobPage from '../NewJobPage/NewJobPage.jsx';\nimport JobsListPage from '../JobsListPage/JobsListPage.jsx';\nimport JobPage from '../JobPage/JobPage.jsx';\n\nimport userService from '../../utils/authService';\n\nimport './App.css';\n\nfunction PrivateRoute({ cb, ...rest }) {\n  return <Route {...rest} render={props => {\n    let component = cb(props);\n    if(!!component.props.user) return component;\n    else return <Redirect to=\"/signup\" />;\n  }} />;\n}\n\nclass App extends Component {\n  state = {\n    user : userService.getUser() || null,\n    posts: {}\n  }; \n\n  addPost = (post) => {\n    let id = post._id;\n    delete post._id;\n    let posts = {...this.state.posts};\n    posts[id] = post;\n    this.setState({ posts });\n  };\n\n  removePost = (pk) => {\n    this.setState(state => {\n      let posts = this.state.posts;\n      delete posts[pk];\n      return { posts }\n    })\n  }\n\n  handleLogin = () => {\n    let user = userService.getUser() || null;\n    this.setState({ user });\n  };\n\n  handleLogout = () => {\n    userService.logout()\n    this.setState({ user: null });\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:3001/api/posts')\n    .then(res => res.json())\n    .then(body => {\n      let posts = {};\n      body.posts.forEach(post => {\n        let id = post._id;\n        delete post._id;\n        posts[id] = post;\n      });\n      this.setState({ posts })\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return <div className=\"App\">\n      <Router>\n        <NavComponent user={this.state.user} />\n        <Switch>\n          <Route exact path=\"/\" render={props => (\n            <LandingPage {...props} />\n          )} />\n          <Route exact path=\"/login\" render={props => (\n            <LoginPage {...props} handleLogin={this.handleLogin} />\n          )} />\n          <Route exact path=\"/signup\" render={props => (\n            <SignupPage {...props} handleLogin={this.handleLogin} />\n          )} />\n          <Route exact path=\"/logout\" render={props => (\n            <LogoutPage handleLogout={this.handleLogout} />\n          )} />\n          <Route exact path=\"/jobs\" render={props => (\n            <JobsListPage history={props.history} posts={this.state.posts} />\n          )} />\n          <PrivateRoute exact path=\"/jobs/new\" cb={props => (\n            <NewJobPage history={props.history} user={this.state.user} addPost={this.addPost} />\n          )} />\n          <Route exact path=\"/jobs/:id\" render={props => (\n            <JobPage history={props.history} user={this.state.user} postId={props.match.params.id} removePost={this.removePost} />\n          )} />\n          <PrivateRoute exact path=\"/profile\" user={this.state.user} cb={props => (\n            <ProfilePage user={this.state.user} handleLogin={this.handleLogin} />\n          )}/>        \n        </Switch>\n      </Router>\n    </div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}