{"version":3,"sources":["components/NavComponent/NavComponent.jsx","utils/tokenService.js","utils/authService.js","pages/LoginPage/LoginPage.jsx","pages/SignupPage/SignupPage.jsx","pages/LogoutPage/LogoutPage.jsx","pages/ProfilePage/ProfilePage.jsx","pages/NewJobPage/NewJobPage.jsx","pages/JobsListPage/JobsListPage.jsx","components/ReplyComponent/ReplyComponent.jsx","pages/JobPage/JobPage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["NavComponent","style","display","justifyContent","border","padding","to","this","props","user","Component","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","signup","userInfo","cb","fetch","method","headers","body","stringify","then","res","json","tokenService","error","catch","console","log","getUser","logout","login","LoginPage","state","username","password","handleChangeField","e","setState","target","name","value","document","getElementById","setCustomValidity","handleSubmit","preventDefault","userService","fieldUsername","reportValidity","handleLogin","history","push","onSubmit","type","id","required","onChange","SignupPage","email","password2","zipcode","firstName","lastName","portraitUrl","validatePassword","fieldPassword2","Base64","encodeURI","fieldname","Object","keys","errors","field","onKeyUp","pattern","LogoutPage","handleLogout","ProfilePage","editMode","editFields","handleEditOn","handleEditOff","handleSubmitEdit","forEach","fieldName","src","width","alt","onClick","NewJobPage","postInfo","title","kind","post","_id","addPost","rows","size","maxLength","JobsPage","posts","map","key","ReplyComponent","expanded","isAuthor","reply","newMessage","toggleExpand","postId","replyId","addReply","message","messages","length","handleChange","handleDelete","messageIdx","getAttribute","splice","margin","consumerUsername","idx","authorUsername","userUsername","data-idx","className","gridTemplateColumns","placeholder","JobPage","newReply","replyIdx","replies","findIndex","r","submitDelete","removePost","submitEdit","options","PrivateRoute","rest","render","component","App","pk","exact","path","JobsListPage","match","params","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61fd3dd8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass NavComponent extends Component {\n  render() {\n    return <nav style={{\n      display: 'flex',\n      justifyContent: 'space-around',\n      border: '1px solid black',\n      padding: '3px 0'\n    }}>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/jobs\">Jobs</Link>\n      {this.props.user\n      ? <>\n          <Link to=\"/profile\">Profile</Link>\n          <Link to=\"/logout\">Logout</Link>\n        </>\n      : <>\n          <Link to=\"/signup\">Signup</Link>\n          <Link to=\"/login\">Login</Link>\n        </>}\n    </nav>\n  }\n}\n\nexport default NavComponent;\n","function setToken(token) {\n  if(token) localStorage.setItem('token', token);\n  else localStorage.removeItem('token');\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if(token) {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return !!token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};\n","import tokenService from './tokenService';\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(userInfo, cb) {\n  return fetch('http://localhost:3001/api/auth/login', {\n\t\tmethod: 'POST',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({ userInfo })\n\t})\n\t\t.then(res => res.json())\n\t\t.then(body => {\n\t\t\tif(body.token) tokenService.setToken(body.token)\n\t\t\telse var error = true;\n\t\t\tcb(error);\n\t\t})\n\t\t.catch(console.log);\n}\n\nfunction signup(userInfo, cb) {\n\tfetch('http://localhost:3001/api/auth/signup', {\n\t\tmethod: 'POST',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({ userInfo })\n\t})\n\t\t.then(res => res.json())\n\t\t.then(body => {\n\t\t\tif(body.token) tokenService.setToken(body.token);\n\t\t\tcb(body.error);\n\t\t})\n\t\t.catch(console.log);\t\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login\n};\n","import React, { Component } from 'react';\nimport userService from '../../utils/authService';\n\nclass LoginPage extends Component {\n\tstate = {\n\t\tusername: '',\n\t\tpassword: ''\n\t};\n\n\thandleChangeField = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t\tdocument.getElementById('field-username').setCustomValidity('');\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tuserService.login(this.state, (error) => {\n\t\t\tif(error) {\n\t\t\t\tlet fieldUsername = document.getElementById('field-username');\n\t\t\t\tfieldUsername.setCustomValidity('the username or password is incorrect');\n\t\t\t\tfieldUsername.reportValidity();\n\t\t\t} else {\n\t\t\t\tthis.props.handleLogin();\n\t\t\t\tthis.props.history.push('/profile')\n\t\t\t}\n\t\t});\n\t};\n\t\n\trender() {\n\t\treturn <>\n\t\t\t<h2>Login</h2>\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>username:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"field-username\" required value={this.state.username} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>password:{' '}</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\" required value={this.state.password} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<input type=\"submit\" value=\"submit\" />\n\t\t\t</form>\n\t\t</>;\n\t}\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\n\nimport userService from '../../utils/authService';\nimport { Base64 } from 'js-base64';\n\nclass SignupPage extends Component {\n\tstate = {\n\t\tusername: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tpassword2: '',\n\t\tzipcode: '',\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\tportraitUrl: ''\n\t};\n\n\tvalidatePassword = () => {\n\t\tlet fieldPassword2 = document.getElementById('field-password2');\n\t\tif(this.state.password !== this.state.password2) \n\t\t\tfieldPassword2.setCustomValidity(\"passwords don't match\");\n\t\telse\n\t\t\tfieldPassword2.setCustomValidity('');\n\t}\n\t\n\thandleChangeField = (e) => {\n\t\tlet name = e.target.name;\n\t\tthis.setState(\n\t\t\t{ [name]: e.target.value },\n\t\t\t() => {\n\t\t\t\tswitch(name) {\n\t\t\t\t\tcase 'password':\n\t\t\t\t\t\tthis.validatePassword();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'username':\n\t\t\t\t\t\tdocument.getElementById('field-username').setCustomValidity('');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'email':\n\t\t\t\t\t\t\tdocument.getElementById('field-email').setCustomValidity('');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({ portraitUrl: Base64.encodeURI(this.state.portraitUrl)}, () => {\n\t\t\tuserService.signup(this.state, (error) => {\n\t\t\t\tif(!!error) {\n\t\t\t\t\tif(error.name === \"ValidationError\") {\n\t\t\t\t\t\tlet fieldname = Object.keys(error.errors)[0];\n\t\t\t\t\t\tlet field = document.getElementById(`field-${fieldname}`);\n\t\t\t\t\t\tfield.setCustomValidity(`this ${fieldname} has already been taken`);\n\t\t\t\t\t\tfield.reportValidity();\n\t\t\t\t\t} else console.log(error);\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.handleLogin();\n\t\t\t\t\tthis.props.history.push('/profile')\n\t\t\t\t} \n\t\t\t});\n\t\t});\n\t};\n\t\n\trender() {\n\t\treturn <>\n\t\t\t<h2>Signup Page</h2>\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>username:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"field-username\" required value={this.state.username} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>email:{' '}</label>\n\t\t\t\t\t<input type=\"email\" name=\"email\" id=\"field-email\" required value={this.state.email} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>password:{' '}</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\" required value={this.state.password} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>confirm password:{' '}</label>\n\t\t\t\t\t<input type=\"password\" name=\"password2\" id=\"field-password2\" required value={this.state.password2} onChange={this.handleChangeField} onKeyUp={this.validatePassword} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>zipcode:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"zipcode\" pattern=\"[0-9]{5}\" required value={this.state.zipcode} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>first name:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"firstName\" required value={this.state.firstName} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>last name:{' '}</label>\n\t\t\t\t\t<input type=\"text\" name=\"lastName\" required value={this.state.lastName} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>profile image url:{' '}</label>\n\t\t\t\t\t<input type=\"url\" name=\"portraitUrl\" value={this.state.portraitUrl} onChange={this.handleChangeField} />\n\t\t\t\t</div>\n\t\t\t\t<input type=\"submit\" value=\"submit\" />\n\t\t\t</form>\n\t\t</>;\n\t}\n}\n\nexport default SignupPage;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction LogoutPage(props) {\n  props.handleLogout();\n  return <Redirect to=\"/\" />\n}\n\nexport default LogoutPage;\n","import React, { Component } from 'react';\nimport tokenService from '../../utils/tokenService';\n\nclass ProfilePage extends Component{\n  state = {\n    editMode: false,\n    editFields: null\n  };\n\n  handleChangeField = (e) => {\n    let editFields = {...this.state.editFields};\n    editFields[e.target.name] = e.target.value;\n    if(e.target.name === \"email\") {\n      document.getElementById('field-email').setCustomValidity('');\n    }\n    this.setState({ editFields });\n  };\n\n  handleEditOn = () => {\n    this.setState({\n      editMode: true,\n      editFields: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        zipcode: '',\n        portraitUrl: ''\n      }\n    });\n  };\n\n  handleEditOff = () => {\n    this.setState({ editMode: false, editFields: null });\n  };\n\n  handleSubmitEdit = (e) => {\n    e.preventDefault();\n\n    let userInfo = {...this.state.editFields};\n    Object.keys(userInfo).forEach(fieldName => {\n      if(userInfo[fieldName] === '') delete userInfo[fieldName];\n    });\n\n    fetch(`http://localhost:3001/api/users/${this.props.user.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({ userInfo })\n    })\n      .then(res => res.json())\n      .then(body => {\n        let error = body.error;\n        if(!!error) {\n          if(error.name === \"ValidationError\") {\n            let fieldname = Object.keys(error.errors)[0];\n            let field = document.getElementById(`field-${fieldname}`);\n            field.setCustomValidity(`this ${fieldname} has already been taken`);\n            field.reportValidity();\n          } else console.log(error);\n        } else {\n          tokenService.setToken(body.token);\n          this.props.handleLogin();\n          this.setState({ user: body.user })\n          this.handleEditOff();\n        }\n      })\n      .catch(console.log);\n  };\n\n  componentDidMount() {\n    fetch(`http://localhost:3001/api/users/${this.props.user.id}`, {\n      headers: {\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      }\n    })\n      .then(res => res.json())\n      .then(body => this.setState({ user: body.user }))\n      .catch(console.log);\n  }\n\n  render() {\n    return !!this.state.user\n    ? <>\n        <h2>Hello {this.state.user.firstName + ' ' + this.state.user.lastName}</h2>\n        <img src={this.state.user.portraitUrl} width=\"256px\" alt=\"Profile\" />\n        <div>\n          <div>\n            <label>username:{' '}</label>\n            <span>{this.state.user.username}</span>\n          </div>\n          <div>\n            <label>email:{' '}</label>\n            <span>{this.state.user.email}</span>\n          </div>\n          <div>\n            <label>zipcode:{' '}</label>\n            <span>{this.state.user.zipcode}</span>\n          </div>\n        </div>\n\n        {this.state.editMode\n        ? <>\n            <button onClick={this.handleEditOff}>cancel edit</button>\n            <form onSubmit={this.handleSubmitEdit}>\n              <div>\n                <label>email:{' '}</label>\n                <input type=\"email\" name=\"email\" id=\"field-email\" value={this.state.editFields.email} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>zipcode:{' '}</label>\n                <input type=\"text\" name=\"zipcode\" pattern=\"[0-9]{5}\" value={this.state.editFields.zipcode} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>first name:{' '}</label>\n                <input type=\"text\" name=\"firstName\" value={this.state.editFields.firstName} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>last name:{' '}</label>\n                <input type=\"text\" name=\"lastName\" value={this.state.editFields.lastName} onChange={this.handleChangeField} />\n              </div>\n              <div>\n                <label>profile image url:{' '}</label>\n                <input type=\"url\" name=\"portraitUrl\" value={this.state.editFields.portraitUrl} onChange={this.handleChangeField} />\n              </div>\n              <input type=\"submit\" value=\"submit\" />\n            </form>\n          </>\n        : <button onClick={this.handleEditOn}>edit info</button>}\n      </>\n    : <h2>Loading</h2>;\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from 'react';\n\nimport tokenService from '../../utils/tokenService';\n\nclass NewJobPage extends Component {\n  state = {\n    postInfo: {\n      title: '',\n      kind: 'offering',\n      body: '',\n      zipcode: ''\n    }\n  }\n\n  handleChangeField = (e) => {\n    let postInfo = {...this.state.postInfo};\n    postInfo[e.target.name] = e.target.value;\n    this.setState({ postInfo });\n  };\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:3001/api/posts', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({ post: this.state.postInfo })\n    })\n    .then(res => res.json())\n    .then(body => {\n      let id = body.post._id;\n      this.props.addPost(body.post);\n      this.props.history.push(`/jobs/${id}`);\n    });\n  };\n\n  render() {\n    return <>\n      <h2>Create a job-listing</h2>\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label>Title:{' '}</label>\n          <input required type=\"text\" name=\"title\" onChange={this.handleChangeField} value={this.state.postInfo.title} style={{ width: '100%' }} />\n        </div>\n        <div>\n          <p>Are you offering work or seeking it?:{' '}\n          <select type=\"text\" name=\"kind\" onChange={this.handleChangeField} value={this.state.postInfo.kind}>\n            <option>offering</option>\n            <option>seeking</option>\n          </select></p>\n        </div>\n        <div>\n          <section>Message Body:{' '}</section>\n          <textarea required type=\"text\" name=\"body\" onChange={this.handleChangeField} value={this.state.postInfo.body} style={{ width: '100%' }} rows=\"15\" />\n        </div>\n        <div>\n          <p>zipcode:{' '}\n            <input required pattern=\"[0-9]{5}\" type=\"text\" name=\"zipcode\" onChange={this.handleChangeField} value={this.state.postInfo.zipcode} size=\"5\" maxLength=\"5\" />\n          </p>\n        </div>\n        <input type=\"submit\" value=\"post ad\" />\n      </form>\n    </>;\n  }\n}\n\nexport default NewJobPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass JobsPage extends Component {\n  render() {\n    return <>\n      <h2>Jobs</h2>\n      <button onClick={() => this.props.history.push('/jobs/new')}>\n        create a new post\n      </button>\n      <ol>\n        {Object.keys(this.props.posts).map(key => {\n          let post = this.props.posts[key];\n          return <li key={key}>\n            <Link to={`/jobs/${key}`}>{post.title}</Link>            \n          </li>\n        })}\n      </ol>\n    </>;\n  }\n}\n\nexport default JobsPage;\n","import React, { Component } from 'react';\nimport tokenService from '../../utils/tokenService';\n\nclass ReplyComponent extends Component {\n  state = {\n    expanded: !this.props.isAuthor,\n    reply: this.props.reply,\n    newMessage: ''\n  };\n\n  toggleExpand = () => {\n    if(this.props.isAuthor)\n      this.setState({ expanded: !this.state.expanded });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:3001/api/replies', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({\n        postId: this.props.postId,\n        replyId: this.state.reply._id || null,\n        reply: this.state.newMessage\n      })\n    })\n    .then(res => res.json())\n    .then(body => {\n      this.props.addReply({\n        _id: body.reply._id,\n        message: body.reply.messages[body.reply.messages.length - 1]\n      });\n      this.setState({ newMessage: ''});\n    })\n    .catch(console.log);\n  };\n\n  handleChange = (e) => this.setState({ newMessage: e.target.value});\n\n  handleDelete = (e) => {\n    e.preventDefault();\n    let messageIdx = e.target.getAttribute('data-idx');\n    fetch(`http://localhost:3001/api/replies/${this.props.reply._id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({\n        messageIdx,\n        postId: this.props.postId\n      })\n    })\n      .then(res => res.json())\n      .then(body => {\n        this.setState(state => {\n          let reply = state.reply;\n          reply.messages.splice(messageIdx, 1);\n          return ({ reply });\n        });\n      })\n      .catch(console.log);\n  };\n\n  render() {\n    return <div style = {{\n      margin: '2px 0',\n      border: '1px solid black',\n      padding: '4px'\n    }}>\n      <div>\n        {this.props.isAuthor &&\n          <button onClick={this.toggleExpand}>{\n            this.state.expanded ? '-' : '+'\n          }</button>}\n        {!this.state.expanded\n        ? <label>{'  '}{this.props.reply.consumerUsername}</label>\n        : this.props.isAuthor && \n            <>\n              <label>{'  '}message history with:{' '}</label>\n              <strong>{this.props.reply.consumerUsername}</strong>\n            </>}\n      </div>\n      {this.state.expanded && \n        <div style={{ padding: '2%' }}>\n          {this.props.reply.messages.map((message, idx) => (\n            <div key={message._id}>\n              {!!idx && <hr />}\n              <span style={{\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}>\n                <span>\n                  <strong>{message.authorUsername}:{' '}</strong>\n                  <span>{message.body}</span>\n                </span>\n                {this.props.userUsername === message.authorUsername &&\n                  <form data-idx={idx} onSubmit={this.handleDelete} style={{ display: 'inline' }}>\n                    <input type=\"submit\" value=\"x\" />\n                  </form>}\n              </span>\n            </div>\n          ))}\n          <br />\n          <form className=\"pure-form\" onSubmit={this.handleSubmit} style={{\n            display: 'grid',\n            gridTemplateColumns: '90% 10%'\n          }}>\n            <input required type=\"text\" placeholder=\"reply\" style={{ width: '100%'}} onChange={this.handleChange} value={this.state.newMessage} />\n            <input type=\"submit\" value=\"send\" />\n          </form>\n        </div>}\n    </div>;\n  }\n}\n\nexport default ReplyComponent;\n","import React, { Component } from 'react';\nimport tokenService from '../../utils/tokenService';\nimport ReplyComponent from '../../components/ReplyComponent/ReplyComponent';\n\nclass JobPage extends Component {\n  state = {\n    editMode: false,\n    body: ''\n  };\n\n  addReply = (newReply) => {\n    let replyIdx = this.state.post.replies.findIndex(r => r._id === newReply._id);\n    if(replyIdx === -1) replyIdx = 0;\n\n    this.setState(state => {\n      let post = state.post;\n      post.replies[replyIdx]._id = newReply._id;\n      post.replies[replyIdx].messages.push(newReply.message);\n      return ({ post });\n    });\n  };\n\n  handleEditOn = () => this.setState(state => ({\n    editMode: true,\n    body: state.post.body\n  }));\n\n  handleEditOff = () => this.setState({\n    editMode: false,\n    body: ''\n  });\n\n  handleChange = (e) => this.setState({ body: e.target.value });\n\n  submitDelete = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:3001/api/posts/${this.props.postId}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      }\n    })\n      .then(res => res.json())\n      .then(() => {\n        this.props.removePost(this.props.postId);\n        this.props.history.push('/profile');\n      })\n      .catch(console.log);\n  };\n\n  submitEdit = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:3001/api/posts/${this.props.postId}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tokenService.getToken()}`\n      },\n      body: JSON.stringify({ postInfo: {\n        body: this.state.body\n      }})\n    })\n      .then(res => res.json())\n      .then(body => {\n        let post = {...this.state.post};\n        post.body = body.post.body;\n        this.setState( {\n          post,\n          editMode: false,\n          body: ''\n        });\n      })\n      .catch(console.log);\n  };\n  \n  componentDidMount() {\n    let token = tokenService.getToken();\n    let options = !!token\n    ? { headers: { 'Authorization': `Bearer ${token}` }}\n    : {};\n    fetch(`http://localhost:3001/api/posts/${this.props.postId}`, options)\n      .then(res => res.json())\n      .then(body => {\n        let isAuthor = !!this.props.user && this.props.user.username === body.post.authorUsername;\n        if(this.props.user && !isAuthor && body.post.replies.length === 0) {\n          body.post.replies.push({\n            consumerUsername: this.props.user.username,\n            messages: []\n          });\n        }\n        this.setState({\n          post: body.post,\n          isAuthor\n        })\n      })\n      .catch(console.log);\n  }\n\n  render() {\n    let post = this.state.post\n    return post\n    ? <>\n        <span style={{\n          display: 'flex',\n          justifyContent: 'space-between'\n        }}>\n          <h2>{post.title}</h2>\n          {this.state.isAuthor &&\n            <span style={{ margin: 'auto 0' }}>\n              <button onClick={this.handleEditOn}>edit</button>\n              <form onSubmit={this.submitDelete} style={{ display: 'inline' }}>\n                <input type=\"submit\" value=\"delete\" />\n              </form>\n            </span>}\n        </span>\n        <label>Posted by:{' '}</label>\n        <strong>{post.authorUsername}</strong>\n        {this.state.editMode\n        ? <div style={{ margin: '1em 0' }}>\n            <form onSubmit={this.submitEdit}>\n              <textarea onChange={this.handleChange} value={this.state.body} style={{ width: '100%' }} rows=\"15\" />\n              <button type=\"button\" onClick={this.handleEditOff}>cancel</button>\n              <input type=\"submit\" value=\"save changes\" />\n            </form>\n          </div>\n        : <p>{post.body}</p>}\n        <p>zipcode:{' '}<strong>{post.zipcode}</strong></p>\n        \n        {(() => {\n          if(!!post.replies.length)\n            return <>\n              <h3>replies</h3>\n              {post.replies.map((reply, idx) => (\n                <ReplyComponent\n                  key={`reply_${idx}`}\n                  userUsername={this.props.user.username}\n                  isAuthor={this.state.isAuthor}\n                  reply={reply}\n                  postId={post._id}\n                  addReply={this.addReply}\n                />\n              ))}\n            </>;\n          else if(!this.props.user)\n            return <button onClick={() => {\n              this.props.history.push('/signup');\n            }}>\n              Sign Up to reply to this post!\n            </button>;\n          else if(this.state.isAuthor)\n            return <i>you have no repies to this post yet.</i>;\n        })()}\n\n      </>\n    : <h2>Loading...</h2>\n  }\n}\n\nexport default JobPage;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport NavComponent from '../../components/NavComponent/NavComponent.jsx';\nimport LoginPage from '../LoginPage/LoginPage.jsx';\nimport SignupPage from '../SignupPage/SignupPage.jsx';\nimport LogoutPage from '../LogoutPage/LogoutPage.jsx';\nimport ProfilePage from '../ProfilePage/ProfilePage.jsx';\nimport NewJobPage from '../NewJobPage/NewJobPage.jsx';\nimport JobsListPage from '../JobsListPage/JobsListPage.jsx';\nimport JobPage from '../JobPage/JobPage.jsx';\n\nimport userService from '../../utils/authService';\n\nimport './App.css';\n\nfunction PrivateRoute({ cb, ...rest }) {\n  return <Route {...rest} render={props => {\n    let component = cb(props);\n    if(!!component.props.user) return component;\n    else return <Redirect to=\"/login\" />;\n  }} />;\n}\n\nclass App extends Component {\n  state = {\n    user : userService.getUser() || null,\n    posts: {}\n  }; \n\n  addPost = (post) => {\n    let id = post._id;\n    delete post._id;\n    let posts = {...this.state.posts};\n    posts[id] = post;\n    this.setState({ posts });\n  };\n\n  removePost = (pk) => {\n    this.setState(state => {\n      let posts = this.state.posts;\n      delete posts[pk];\n      return { posts }\n    })\n  }\n\n  handleLogin = () => {\n    let user = userService.getUser() || null;\n    this.setState({ user });\n  };\n\n  handleLogout = () => {\n    userService.logout()\n    this.setState({ user: null });\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:3001/api/posts')\n    .then(res => res.json())\n    .then(body => {\n      let posts = {};\n      body.posts.forEach(post => {\n        let id = post._id;\n        delete post._id;\n        posts[id] = post;\n      });\n      this.setState({ posts })\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return <div className=\"App\">\n      <Router>\n        <NavComponent user={this.state.user} />\n        <Switch>\n          <Route exact path=\"/login\" render={props => (\n            <LoginPage {...props} handleLogin={this.handleLogin} />\n          )} />\n          <Route exact path=\"/signup\" render={props => (\n            <SignupPage {...props} handleLogin={this.handleLogin} />\n          )} />\n          <Route exact path=\"/logout\" render={props => (\n            <LogoutPage handleLogout={this.handleLogout} />\n          )} />\n          <Route exact path=\"/jobs\" render={props => (\n            <JobsListPage history={props.history} posts={this.state.posts} />\n          )} />\n          <PrivateRoute exact path=\"/jobs/new\" cb={props => (\n            <NewJobPage history={props.history} user={this.state.user} addPost={this.addPost} />\n          )} />\n          <Route exact path=\"/jobs/:id\" render={props => (\n            <JobPage history={props.history} user={this.state.user} postId={props.match.params.id} removePost={this.removePost} />\n          )} />\n          <PrivateRoute exact path=\"/profile\" user={this.state.user} cb={props => (\n            <ProfilePage user={this.state.user} handleLogin={this.handleLogin} />\n          )}/>        \n        </Switch>\n      </Router>\n    </div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}